#!/bin/bash

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/csjmu.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/csjmu.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/csjmu.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/csjmu.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/csjmu.com/msp/tlscacerts/tlsca.csjmu.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/csjmu.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/csjmu.com/tlsca/tlsca.csjmu.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name Parul --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://Parul:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://Parul:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls" --enrollment.profile tls --csr.hosts Parul.csjmu.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/csjmu.com/orderers/Parul.csjmu.com/msp/tlscacerts/tlsca.csjmu.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/csjmu.com/users/Admin@csjmu.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/csjmu.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/csjmu.com/users/Admin@csjmu.com/msp/config.yaml"
}

function createcsjmu() {
  # Array to hold peer names
  PEERNAME=("Kapil" "Rahul" "Navneet")

  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/csjmu.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/csjmu.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-csjmu --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-csjmu.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-csjmu.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-csjmu.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-csjmu.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/csjmu.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy csjmu's CA cert to csjmu's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/csjmu.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem" "${PWD}/organizations/peerOrganizations/csjmu.com/msp/tlscacerts/ca.crt"

  # Copy csjmu's CA cert to csjmu's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/csjmu.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem" "${PWD}/organizations/peerOrganizations/csjmu.com/tlsca/tlsca.csjmu.com-cert.pem"

  # Copy csjmu's CA cert to csjmu's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/csjmu.com/ca"
  cp "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem" "${PWD}/organizations/peerOrganizations/csjmu.com/ca/ca.csjmu.com-cert.pem"

  infoln "Registering peers and users"
  for i in $(seq 0 2); do
    infoln "Registering ${PEERNAME[$i]}"
    set -x
    fabric-ca-client register --caname ca-csjmu --id.name ${PEERNAME[$i]} --id.secret peer${i}pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user${i}"
    set -x
    fabric-ca-client register --caname ca-csjmu --id.name user${i} --id.secret user${i}pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
    { set +x; } 2>/dev/null
  done

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-csjmu --id.name Kapil --id.secret csjmuadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
  { set +x; } 2>/dev/null

  for i in $(seq 0 2); do
    infoln "Generating the ${PEERNAME[$i]} msp"
    set -x
    fabric-ca-client enroll -u https://${PEERNAME[$i]}:peer${i}pw@localhost:7054 --caname ca-csjmu -M "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/peerOrganizations/csjmu.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/msp/config.yaml"

    infoln "Generating the ${PEERNAME[$i]}-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://${PEERNAME[$i]}:peer${i}pw@localhost:7054 --caname ca-csjmu -M "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls" --enrollment.profile tls --csr.hosts ${PEERNAME[$i]}.csjmu.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/ca.crt"
    cp "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/server.crt"
    cp "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/csjmu.com/peers/${PEERNAME[$i]}.csjmu.com/tls/server.key"
  done

  for i in $(seq 0 2); do
    infoln "Generating the user${i} msp"
    set -x
    fabric-ca-client enroll -u https://user${i}:user${i}pw@localhost:7054 --caname ca-csjmu -M "${PWD}/organizations/peerOrganizations/csjmu.com/users/user${i}.csjmu.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/peerOrganizations/csjmu.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/csjmu.com/users/user${i}.csjmu.com/msp/config.yaml"
  done

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Kapil:csjmuadminpw@localhost:7054 --caname ca-csjmu -M "${PWD}/organizations/peerOrganizations/csjmu.com/users/Admin@csjmu.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/csjmu/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/csjmu.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/csjmu.com/users/Admin@csjmu.com/msp/config.yaml"
}

# Call the functions
 createOrderer
 createcsjmu
